#include<stdio.h>
#include<bits/stdc++.h>
using namespace std;
int main(){
    ios_base::sync_with_stdio(0);cin.tie(NULL);cout.tie(NULL);
  
     
     int t;
     cin>>t;
     
while(t-->0){
    int h;
    int w;
    cin>>h>>w;
    int arr[h][w];
    for(int i=0;i<h;i++){
        for(int j=0;j<w;j++){
            cin>>arr[i][j];
        }
    }
    int dp[h][w];
    for(int i=0;i<w;i++){
        dp[0][i]=arr[0][i];
    }
    if(h==1&&w!=1){
        sort(arr[0],arr[0]+w);
        printf("%d\n",arr[0][w-1]);
    }
    else if(h!=1&&w==1){
        int sum=0;
        for(int i=0;i<h;i++){
            sum=sum+arr[i][0];
        }
        printf("%d\n",sum);
    }
    else if(h==1&&w==1){
        printf("%d\n",arr[0][0]);
    }
    else{
    int max=0;
  for(int i=1;i<h;i++){
      for(int j=0;j<w;j++){
           dp[i][j]=arr[i][j]+dp[i-1][j];
          if(i==h-1){
          if(j==0){
           if(dp[i][j]<=(arr[i][j]+dp[i-1][j+1])){
             dp[i][j]=arr[i][j]+dp[i-1][j+1];  
           }
          }
          else if(j==(w-1)){
             if(dp[i][j]<=(arr[i][j]+dp[i-1][j-1])){
             dp[i][j]=arr[i][j]+dp[i-1][j-1];  
           } 
          }
          
          else{
             if(dp[i][j]<=(arr[i][j]+dp[i-1][j+1])){
             dp[i][j]=arr[i][j]+dp[i-1][j+1];  
           }
               if(dp[i][j]<=(arr[i][j]+dp[i-1][j-1])){
             dp[i][j]=arr[i][j]+dp[i-1][j-1];  
           }
          }
            if(dp[i][j]>=max){
               max=dp[i][j];
           }
      }
          else{
                 if(j==0){
           if(dp[i][j]<=(arr[i][j]+dp[i-1][j+1])){
             dp[i][j]=arr[i][j]+dp[i-1][j+1];  
           }
          }
          else if(j==(w-1)){
             if(dp[i][j]<=(arr[i][j]+dp[i-1][j-1])){
             dp[i][j]=arr[i][j]+dp[i-1][j-1];  
           } 
          }
          
          else{
             if(dp[i][j]<=(arr[i][j]+dp[i-1][j+1])){
             dp[i][j]=arr[i][j]+dp[i-1][j+1];  
           }
               if(dp[i][j]<=(arr[i][j]+dp[i-1][j-1])){
             dp[i][j]=arr[i][j]+dp[i-1][j-1];  
           }
          }
           
          }
      }
  }

printf("%d\n",max);   
}
}
    return 0;
}
