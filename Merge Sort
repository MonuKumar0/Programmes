import java.util.*;
public class Test 
{       static int comparisons=0;
        static void mergeSort(int[] array, int p, int r)
    {
	if (p < r) {
	    int q = (p + r) / 2;
	    mergeSort(array, p, q);
	    mergeSort(array, q+1, r);
	    merge(array, p, q, r);
	}
    }
            static void merge(int[] array, int p, int q, int r)
    {
	int n1 = q - p + 1;
	int n2 = r - q;
	int[] left = new int[n1 + 1];
	int[] right = new int[n2 + 1];

	for (int i = 0; i < n1; i++)
	    left[i] = array[p + i];

	for (int j = 0; j < n2; j++)
	    right[j] = array[q + j + 1];

	left[n1] = Integer.MAX_VALUE;	
	right[n2] = Integer.MAX_VALUE;

	for (int i = 0, j = 0, k = p; k <= r; k++) {
            comparisons++;        //counting comparisons
	    if (left[i]<right[j]){
                
		array[k] = left[i++];}
            else{
		array[k] = right[j++];
            }
	}
    }
public static void main(String[] args){
int[] arr={1,5,2,3,4,6,7,9,8};
mergeSort(arr,0,8);
System.out.println(comparisons);
}
}

 
